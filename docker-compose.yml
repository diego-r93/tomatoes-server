version: "3"

services:
  backend:
    image: node:18.17.1
    container_name: backend
    volumes:
      - ./backend:/backend
    networks:
      - backend_network
      - nginx_network
      - influxdb_network
      - mosquitto_network
    env_file:
      - .env
    command: bash -c "cd /backend && yarn install && yarn start"

  frontend:
    image: node:18.17.1
    container_name: frontend
    volumes:
      - ./frontend:/frontend
    networks:
      - frontend_network
      - nginx_network
    depends_on:
      - backend
    command: bash -c "cd /frontend && yarn install && yarn dev"

  nginx:
    image: nginx:1.25
    container_name: nginx_proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    networks:
      - nginx_network
      - frontend_network
      - backend_network
      - influxdb_network
    env_file:
      - .env
    depends_on:
      - frontend
      - backend
      - grafana
      - influxdb

  mosquitto:
    image: eclipse-mosquitto:2.0.17
    container_name: mosquitto
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto.sh:/mosquitto.sh
    ports:
      - 1883:1883
      - 9001:9001
    networks:
      - mosquitto_network
    environment:
      - MQTT_USER_NAME=${MQTT_USER_NAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
    entrypoint: [ "./mosquitto.sh" ]

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: on-failure:10
    volumes:
      - influxdb_data:/var/lib/influxdb:rw
    networks:
      - influxdb_network
    ports:
      - 8086:8086
    env_file:
      - .env
    entrypoint: [ "./entrypoint.sh" ]

  telegraf:
    image: telegraf:1.25
    container_name: telegraf
    restart: unless-stopped
    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
    networks:
      - influxdb_network
    env_file:
      - .env
    depends_on:
      - influxdb

  grafana:
    image: grafana/grafana-oss:8.4.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - influxdb_network   
    env_file:
      - .env
    depends_on:
      - influxdb

volumes:
  influxdb_data:
  grafana_data:

networks:
  frontend_network:
  backend_network:
  nginx_network:
  influxdb_network:
  mosquitto_network: